// variables
int detVal = 700;
bool botCal = 0;
int ledVal = 0;

bool initState = 0;
bool initStarted = 0;


void initCb(const std_msgs::Bool& init_msg){
  initState = init_msg.data;
}




std_msgs::Bool ledDet;



ros::Subscriber<std_msgs::Bool> initsub("Init_State", &initCb );



void setup(){
  

  

  nh.advertise(ledpub);

  nh.subscribe(initsub);


  ledDet.data = 0;


  // init pin for led detection
  pinMode(A0, INPUT);
  pinMode(startButton, INPUT_PULLUP);
  pinMode(red, OUTPUT);
  pinMode(green, OUTPUT);
  pinMode(blue, OUTPUT);
  

  // change TOF sensor addresses
  


  // publish LED state 
  ledpub.publish(&ledDet);
}


void loop(){
  // check if ROS is initialized
  if(initState && !initStarted){
    digitalWrite(red, HIGH);
    digitalWrite(green, LOW);
    digitalWrite(blue, LOW);
    initStarted = 1;
  }
  
  // check if bot is ready
  //Serial.println(analogRead(A0));
  if(!botCal && digitalRead(startButton) && initState){
    botCal = 1;
    detVal = analogRead(A0) + detValOffset;
    digitalWrite(red, LOW);
    digitalWrite(green, HIGH);
    digitalWrite(blue, LOW);
  }

  
  



  // Detect LED
  if (!ledDet.data && (analogRead(0) > detVal) && botCal) {
    ledDet.data = 1;
    ledpub.publish(&ledDet);
  }

}
